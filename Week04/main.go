// Code generated by Wire. DO NOT EDIT.
//go:generate wire
//+build !wireinject
package main

import (
	"flag"
	"github.com/php403/go-001/week04/di"
	"log"
	"os"
	"os/signal"
	"syscall"
	"time"
)
// Injectors from wire.go:
func main()  {
	flag.Parse()
	_ ,err := di.InitApp()
	if err != nil {
		panic(err)
	}
	c := make(chan os.Signal, 1)
	signal.Notify(c, syscall.SIGHUP, syscall.SIGQUIT, syscall.SIGTERM, syscall.SIGINT)
	for {
		s := <-c
		log.Println("get a signal %s", s.String())
		switch s {
		case syscall.SIGQUIT, syscall.SIGTERM, syscall.SIGINT:
			log.Println("pvp exit")
			time.Sleep(time.Second)
			return
		case syscall.SIGHUP:
		default:
			return
		}
	}

}


